{"version":3,"sources":["App.js","useFetch.js","index.js"],"names":["App","searchData","useState","searchTerm","setSearchTerm","url","apiData","setApiData","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","useFetch","Container","className","aria-label","type","placeholder","value","onChange","e","target","size","color","margin","Object","keys","map","category","index","length","item","ip","name","serialnumber","styled","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qoCAoEeA,MA7Df,WAAgB,IAOQC,EAPT,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OCHA,SAAkBC,GAAM,IAAD,EACNH,mBAAS,MADH,mBAC7BI,EAD6B,KACpBC,EADoB,OAEFL,mBAAS,MAFP,mBAE7BM,EAF6B,KAElBC,EAFkB,KAcpC,OAVAC,qBAAU,WACRD,GAAa,GACbE,MAAMN,GACHO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAWQ,GACXN,GAAa,QAEhB,CAACJ,IAEG,CAACC,UAASE,aDRcQ,CAC7B,2CAA6Cb,GADvCG,EAHK,EAGLA,QAASE,EAHJ,EAGIA,UAmCjB,OACE,eAACS,EAAD,CAAWC,UAAU,MAArB,UACE,uBAAOC,aAAW,WAClB,sBAAKD,UAAU,mBAAf,UACE,uBACEE,KAAK,OACLC,YAAY,SACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAcoB,EAAEC,OAAOH,UAE1C,cAAC,IAAD,CAAaJ,UAAU,mBAExBV,EACC,cAAC,IAAD,CAAakB,KAAM,EAAGC,MAAM,aAAaC,OAAO,OAEhD,qBAAKV,UAAU,sBAAf,mBA9CgBjB,EAiDJK,EAhDXL,GAAeE,EAIb0B,OAAOC,KAAK7B,GAAY8B,KAAI,SAACC,EAAUC,GAC5C,OACE,+BACgD,IAA7CJ,OAAOC,KAAK7B,EAAW+B,IAAWE,OACjC,GACe,iBAAbF,EAGF,+CAEA,6BAAKA,IAENH,OAAOC,KAAK7B,EAAW+B,IAAWD,KAAI,SAACI,EAAMF,GAC5C,MAAiB,OAAbD,EACK,6BAAK/B,EAAWmC,GAAGH,KACJ,SAAbD,EACF,6BAAK/B,EAAWoC,KAAKJ,KACN,iBAAbD,EACF,6BAAK/B,EAAWqC,aAAaL,UAD/B,OAfFA,MALJ,6BAsDPhB,EAAYsB,IAAOC,IAAV,KElEfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.977b207a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport styled from \"styled-components\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport useFetch from \"./useFetch\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const { apiData, isLoading } = useFetch(\n    \"http://23.101.139.98:2349/lookup?prefix=\" + searchTerm\n  );\n\n  const searchResult = (searchData) => {\n    if (!searchData || !searchTerm) {\n      return <div></div>;\n    }\n\n    return Object.keys(searchData).map((category, index) => {\n      return (\n        <ul key={index}>\n          {Object.keys(searchData[category]).length === 0 ? (\n            \"\"\n          ) : category === \"serialnumber\" ? (\n            //just a quick hack to format the title for serial number\n            //other titles simply capitalised with css text-transform property\n            <h3>Serial Number</h3>\n          ) : (\n            <h3>{category}</h3>\n          )}\n          {Object.keys(searchData[category]).map((item, index) => {\n            if (category === \"ip\") {\n              return <li>{searchData.ip[index]}</li>;\n            } else if (category === \"name\") {\n              return <li>{searchData.name[index]}</li>;\n            } else if (category === \"serialnumber\") {\n              return <li>{searchData.serialnumber[index]}</li>;\n            }\n          })}\n        </ul>\n      );\n    });\n  };\n\n  return (\n    <Container className=\"App\">\n      <label aria-label=\"search\"></label>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <BiSearchAlt className=\"search-icon\" />\n      </div>\n      {isLoading ? (\n        <PulseLoader size={8} color=\"aquamarine\" margin=\"10\" />\n      ) : (\n        <div className=\"spinner-placeholder\">&nbsp;</div>\n      )}\n\n      {searchResult(apiData)}\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  font-family: \"Noto Sans JP\", sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  .search-container {\n    padding: 0.5em;\n    margin-top: 1em;\n    display: flex;\n    align-items: center;\n    border: 1px solid gray;\n    border-radius: 5px;\n\n    input {\n      border: 0;\n      outline: 0;\n    }\n\n    .search-icon {\n      color: gray;\n    }\n  }\n\n  .spinner-placeholder {\n    height: 32px;\n  }\n\n  h3 {\n    margin-bottom: 0.25em;\n    text-transform: capitalize;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 0.75em;\n    list-style: none;\n    margin-bottom: 1em;\n\n    li {\n      color: gray;\n      font-weight: 100;\n    }\n  }\n`;\n","//custom hook for fetching api data\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n  const [apiData, setApiData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setApiData(data);\r\n        setIsLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  return {apiData, isLoading};\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}